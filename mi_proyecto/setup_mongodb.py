#!/usr/bin/env python
"""
Script para configurar la base de datos MongoDB con datos de ejemplo
para el Sistema de Reuniones Nacionales del TecNM
"""

import os
import sys
import django
from datetime import datetime, timedelta
from bson import ObjectId

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mi_proyecto.settings')
django.setup()

# Importar modelos despu√©s de configurar Django
from mi_aplication.models import (
    ReunionNacional, Acuerdo, Participante, Documento,
    ParticipanteEmbebido, DocumentoEmbebido, AgendaEmbebido, SeguimientoEmbebido
)

def create_admin_user():
    """Crear usuario administrador"""
    from django.contrib.auth.models import User
    if not User.objects.filter(username='admin').exists():
        User.objects.create_superuser('admin', 'admin@tecnm.mx', 'admin12345')
        print("‚úÖ Usuario administrador creado: admin/admin12345")

def create_example_reunions():
    """Crear reuniones de ejemplo con objetos anidados"""
    print("\nüìÖ Creando reuniones de ejemplo...")
    
    # Reuni√≥n 1: RNSA
    reunion1 = ReunionNacional(
        titulo="Reuni√≥n Nacional de Subdirectores Acad√©micos 2024",
        tipo="RNSA",
        fecha_inicio=datetime(2024, 11, 15, 9, 0),
        fecha_fin=datetime(2024, 11, 17, 18, 0),
        sede="Instituto Tecnol√≥gico de Monterrey, Campus Ciudad de M√©xico",
        estado="PLANIFICADA",
        descripcion="Reuni√≥n anual para coordinar pol√≠ticas acad√©micas y mejorar la calidad educativa en todos los institutos del TecNM.",
        objetivos="Establecer lineamientos acad√©micos, compartir mejores pr√°cticas y definir estrategias para el pr√≥ximo ciclo escolar.",
        participantes_esperados=150,
        presupuesto_asignado=250000.00,
        organizador_principal="Dr. Mar√≠a Gonz√°lez, Subdirectora de Asuntos Acad√©micos"
    )
    
    # Agregar participantes embebidos
    reunion1.participantes = [
        ParticipanteEmbebido(
            nombre="Juan Carlos",
            apellido_paterno="Rodr√≠guez",
            apellido_materno="L√≥pez",
            email="juan.rodriguez@tecnm.mx",
            telefono="555-123-4567",
            instituto="Instituto Tecnol√≥gico de Minatitl√°n",
            departamento="Subdirecci√≥n Acad√©mica",
            tipo_participante="SUBDIRECTOR",
            confirmado=True,
            fecha_confirmacion=datetime.now(),
            observaciones="Participante confirmado con hotel reservado"
        ),
        ParticipanteEmbebido(
            nombre="Ana Mar√≠a",
            apellido_paterno="Garc√≠a",
            apellido_materno="Hern√°ndez",
            email="ana.garcia@tecnm.mx",
            telefono="555-987-6543",
            instituto="Instituto Tecnol√≥gico de Villahermosa",
            departamento="Subdirecci√≥n Acad√©mica",
            tipo_participante="SUBDIRECTOR",
            confirmado=True,
            fecha_confirmacion=datetime.now(),
            observaciones="Requiere dieta especial"
        ),
        ParticipanteEmbebido(
            nombre="Carlos",
            apellido_paterno="Mart√≠nez",
            apellido_materno="P√©rez",
            email="carlos.martinez@tecnm.mx",
            telefono="555-456-7890",
            instituto="Instituto Tecnol√≥gico de Coatzacoalcos",
            departamento="Subdirecci√≥n Acad√©mica",
            tipo_participante="SUBDIRECTOR",
            confirmado=False,
            observaciones="Pendiente de confirmaci√≥n"
        )
    ]
    
    # Agregar agenda embebida
    reunion1.agenda = [
        AgendaEmbebido(
            titulo="Inauguraci√≥n y Bienvenida",
            descripcion="Ceremonia de apertura con autoridades del TecNM",
            hora_inicio="09:00",
            hora_fin="10:30",
            responsable="Dr. Mar√≠a Gonz√°lez",
            tipo_actividad="PRESENTACION"
        ),
        AgendaEmbebido(
            titulo="Presentaci√≥n de Nuevas Pol√≠ticas Acad√©micas",
            descripcion="Revisi√≥n de lineamientos actualizados para el ciclo 2024-2025",
            hora_inicio="11:00",
            hora_fin="13:00",
            responsable="Mtra. Laura S√°nchez",
            tipo_actividad="PRESENTACION"
        ),
        AgendaEmbebido(
            titulo="Trabajo en Grupos por Regi√≥n",
            descripcion="Discusi√≥n de problem√°ticas espec√≠ficas por regi√≥n geogr√°fica",
            hora_inicio="15:00",
            hora_fin="17:30",
            responsable="Coordinadores Regionales",
            tipo_actividad="TRABAJO_GRUPO"
        )
    ]
    
    # Agregar documentos embebidos
    reunion1.documentos = [
        DocumentoEmbebido(
            titulo="Programa General RNSA 2024",
            descripcion="Programa detallado de actividades para los tres d√≠as",
            tipo="AGENDA",
            url="https://drive.google.com/file/d/example1",
            formato="pdf",
            tama√±o=2048576,
            version="1.0",
            fecha_subida=datetime.now(),
            subido_por="Sistema",
            observaciones="Documento oficial de la reuni√≥n"
        ),
        DocumentoEmbebido(
            titulo="Nuevas Pol√≠ticas Acad√©micas 2024-2025",
            descripcion="Documento con las pol√≠ticas actualizadas",
            tipo="MEMORANDUM",
            url="https://drive.google.com/file/d/example2",
            formato="docx",
            tama√±o=1536000,
            version="2.1",
            fecha_subida=datetime.now(),
            subido_por="Dr. Mar√≠a Gonz√°lez",
            observaciones="Versi√≥n final aprobada"
        )
    ]
    
    reunion1.save()
    print(f"‚úÖ Reuni√≥n creada: {reunion1.titulo}")
    
    # Reuni√≥n 2: RNPD
    reunion2 = ReunionNacional(
        titulo="Reuni√≥n Nacional de Posgrado y Desarrollo 2024",
        tipo="RNPD",
        fecha_inicio=datetime(2024, 12, 5, 8, 30),
        fecha_fin=datetime(2024, 12, 7, 17, 0),
        sede="Instituto Tecnol√≥gico de Quer√©taro",
        estado="EN_CURSO",
        descripcion="Reuni√≥n para fortalecer los programas de posgrado y fomentar la investigaci√≥n en el TecNM.",
        objetivos="Mejorar la calidad de los posgrados, establecer colaboraciones de investigaci√≥n y definir estrategias de desarrollo.",
        participantes_esperados=80,
        presupuesto_asignado=180000.00,
        organizador_principal="Dr. Roberto Silva, Director de Posgrado"
    )
    
    # Agregar participantes embebidos
    reunion2.participantes = [
        ParticipanteEmbebido(
            nombre="Dr. Patricia",
            apellido_paterno="L√≥pez",
            apellido_materno="Mendoza",
            email="patricia.lopez@tecnm.mx",
            telefono="555-111-2222",
            instituto="Instituto Tecnol√≥gico de Minatitl√°n",
            departamento="Coordinaci√≥n de Posgrado",
            tipo_participante="COORDINADOR",
            confirmado=True,
            fecha_confirmacion=datetime.now(),
            observaciones="Presentar√° ponencia sobre nuevos programas"
        )
    ]
    
    reunion2.save()
    print(f"‚úÖ Reuni√≥n creada: {reunion2.titulo}")
    
    return reunion1, reunion2

def create_example_acuerdos(reunion1, reunion2):
    """Crear acuerdos de ejemplo con objetos anidados"""
    print("\nü§ù Creando acuerdos de ejemplo...")
    
    # Acuerdo 1
    acuerdo1 = Acuerdo(
        titulo="Implementaci√≥n de Nuevas Pol√≠ticas Acad√©micas",
        descripcion="Implementar las nuevas pol√≠ticas acad√©micas en todos los institutos del TecNM para el ciclo 2024-2025.",
        categoria="ACADEMICA",
        estado="EN_PROCESO",
        prioridad="ALTA",
        reunion=reunion1,
        responsable="Dr. Mar√≠a Gonz√°lez",
        fecha_limite=datetime(2025, 2, 28),
        seguimientos=[
            SeguimientoEmbebido(
                fecha_seguimiento=datetime.now() - timedelta(days=30),
                estado_anterior="PENDIENTE",
                estado_nuevo="EN_PROCESO",
                porcentaje_avance=25,
                observaciones="Se han enviado las pol√≠ticas a todos los institutos para revisi√≥n",
                responsable="Dr. Mar√≠a Gonz√°lez"
            ),
            SeguimientoEmbebido(
                fecha_seguimiento=datetime.now() - timedelta(days=15),
                estado_anterior="EN_PROCESO",
                estado_nuevo="EN_PROCESO",
                porcentaje_avance=50,
                observaciones="Se han recibido comentarios de 45 institutos, pendientes 15",
                responsable="Dr. Mar√≠a Gonz√°lez"
            )
        ],
        documentos=[
            DocumentoEmbebido(
                titulo="Pol√≠ticas Acad√©micas Finales",
                descripcion="Versi√≥n final de las pol√≠ticas a implementar",
                tipo="MEMORANDUM",
                url="https://drive.google.com/file/d/acuerdo1",
                formato="pdf",
                tama√±o=3072000,
                version="3.0",
                fecha_subida=datetime.now(),
                subido_por="Dr. Mar√≠a Gonz√°lez"
            )
        ]
    )
    acuerdo1.save()
    print(f"‚úÖ Acuerdo creado: {acuerdo1.titulo}")
    
    # Acuerdo 2
    acuerdo2 = Acuerdo(
        titulo="Fortalecimiento de Programas de Posgrado",
        descripcion="Mejorar la calidad y acreditaci√≥n de los programas de posgrado en el TecNM.",
        categoria="ACADEMICA",
        estado="PENDIENTE",
        prioridad="MEDIA",
        reunion=reunion2,
        responsable="Dr. Roberto Silva",
        fecha_limite=datetime(2025, 6, 30),
        seguimientos=[
            SeguimientoEmbebido(
                fecha_seguimiento=datetime.now() - timedelta(days=5),
                estado_anterior="PENDIENTE",
                estado_nuevo="PENDIENTE",
                porcentaje_avance=0,
                observaciones="Acuerdo reci√©n establecido, pendiente de iniciar acciones",
                responsable="Dr. Roberto Silva"
            )
        ]
    )
    acuerdo2.save()
    print(f"‚úÖ Acuerdo creado: {acuerdo2.titulo}")
    
    return acuerdo1, acuerdo2

def create_example_participantes():
    """Crear participantes independientes de ejemplo"""
    print("\nüë• Creando participantes independientes...")
    
    participante1 = Participante(
        nombre="Dr. Francisco",
        apellido_paterno="Hern√°ndez",
        apellido_materno="Garc√≠a",
        email="francisco.hernandez@tecnm.mx",
        telefono="555-333-4444",
        instituto="Instituto Tecnol√≥gico de Minatitl√°n",
        departamento="Direcci√≥n General",
        tipo_participante="DIRECTOR",
        confirmado=True,
        fecha_confirmacion=datetime.now(),
        observaciones="Director con amplia experiencia en gesti√≥n acad√©mica"
    )
    participante1.save()
    print(f"‚úÖ Participante creado: {participante1}")
    
    participante2 = Participante(
        nombre="Mtra. Carmen",
        apellido_paterno="Vargas",
        apellido_materno="Ruiz",
        email="carmen.vargas@tecnm.mx",
        telefono="555-555-6666",
        instituto="Instituto Tecnol√≥gico de Villahermosa",
        departamento="Subdirecci√≥n Acad√©mica",
        tipo_participante="SUBDIRECTOR",
        confirmado=True,
        fecha_confirmacion=datetime.now(),
        observaciones="Especialista en innovaci√≥n educativa"
    )
    participante2.save()
    print(f"‚úÖ Participante creado: {participante2}")

def create_example_documents():
    """Crear documentos independientes de ejemplo"""
    print("\nüìÑ Creando documentos independientes...")
    
    documento1 = Documento(
        titulo="Manual de Procedimientos Acad√©micos 2024",
        descripcion="Manual actualizado con todos los procedimientos acad√©micos del TecNM",
        tipo="MEMORANDUM",
        url="https://drive.google.com/file/d/doc1",
        formato="pdf",
        tama√±o=5120000,
        version="4.2",
        fecha_subida=datetime.now(),
        subido_por="Sistema",
        observaciones="Documento de referencia para todas las reuniones"
    )
    documento1.save()
    print(f"‚úÖ Documento creado: {documento1.titulo}")
    
    documento2 = Documento(
        titulo="Estad√≠sticas Acad√©micas 2023-2024",
        descripcion="Reporte estad√≠stico del desempe√±o acad√©mico del TecNM",
        tipo="ACTA",
        url="https://drive.google.com/file/d/doc2",
        formato="xlsx",
        tama√±o=2048000,
        version="1.0",
        fecha_subida=datetime.now(),
        subido_por="Dr. Mar√≠a Gonz√°lez",
        observaciones="Datos para an√°lisis en reuniones"
    )
    documento2.save()
    print(f"‚úÖ Documento creado: {documento2.titulo}")

def main():
    """Funci√≥n principal para configurar la base de datos"""
    print("üöÄ Configurando Sistema de Reuniones Nacionales del TecNM")
    print("=" * 60)
    
    try:
        # Crear usuario administrador
        create_admin_user()
        
        # Crear datos de ejemplo
        reunion1, reunion2 = create_example_reunions()
        acuerdo1, acuerdo2 = create_example_acuerdos(reunion1, reunion2)
        create_example_participantes()
        create_example_documents()
        
        print("\n" + "=" * 60)
        print("‚úÖ Configuraci√≥n completada exitosamente!")
        print("\nüìã Resumen de datos creados:")
        print(f"   ‚Ä¢ Reuniones: {ReunionNacional.objects.count()}")
        print(f"   ‚Ä¢ Acuerdos: {Acuerdo.objects.count()}")
        print(f"   ‚Ä¢ Participantes: {Participante.objects.count()}")
        print(f"   ‚Ä¢ Documentos: {Documento.objects.count()}")
        
        print("\nüåê Acceso al sistema:")
        print("   ‚Ä¢ URL principal: http://localhost:8000/")
        print("   ‚Ä¢ Dashboard: http://localhost:8000/mi_aplication/")
        print("   ‚Ä¢ Admin Django: http://localhost:8000/admin/")
        print("   ‚Ä¢ Usuario admin: admin / admin12345")
        
        print("\nüìä Caracter√≠sticas del nuevo sistema:")
        print("   ‚Ä¢ Modelos con objetos anidados (embebidos)")
        print("   ‚Ä¢ Referencias entre documentos")
        print("   ‚Ä¢ Estructura optimizada para MongoDB")
        print("   ‚Ä¢ Sistema de seguimiento de acuerdos")
        print("   ‚Ä¢ Gesti√≥n de participantes y documentos")
        
    except Exception as e:
        print(f"\n‚ùå Error durante la configuraci√≥n: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
